{"version":3,"sources":["componentes/views/LandingPage/CoinName.js","componentes/views/LandingPage/TableSetting.js","componentes/views/LandingPage/CoinPrice.js","componentes/views/LandingPage/CoinStatus.js","componentes/views/LandingPage/Chart.js","componentes/views/LandingPage/LandingPage.js","_actions/types.js","_actions/user_action.js","componentes/views/LoginPage/LoginPage.js","componentes/views/RegisterPage/RegisterPage.js","componentes/views/Community/Community.js","componentes/views/CoinNews/CoinNews.js","componentes/views/CoinNews/CoinNewsPage.js","hoc/auth.js","img/다운로드.png","componentes/views/Header/Header.js","componentes/views/MarketCapitalization/MarketCapitalization.js","componentes/views/Info/Info.js","componentes/views/CoinSite/ImageUrl.js","componentes/views/CoinSite/CoinSite.js","componentes/views/Community/WritePost.js","_actions/board_action.js","componentes/views/Community/Post.js","componentes/App.js","reportWebVitals.js","_reducers/index.js","_reducers/user_reducer.js","_reducers/board_reducer.js","index.js"],"names":["CoinName","url","useState","name","setName","callUrl","a","axios","get","data","console","log","useEffect","comma","number","toString","replace","TableSetting","price","tableCoin","setTableCoin","reduce","result","item","krw_name","korean_name","market","split","trade_price","chage_price","signed_change_rate","toFixed","signed_change_price","acc_trade_price_24h","highest_52_week_price","Math","round","lowest_52_week_price","highest_52_week_date","lowest_52_week_date","trade_date","high_price","low_price","krw_name_sort","price_sort","highest_52_week_price_sort","lowest_52_week_price_sort","chage_price_sort","acc_trade_price_24h_sort","hight","modal","english_name","info_name","CoinPrice","status","nullPrice","setNullPrice","setPrice","map","_a","foundB","find","_b","undefined","filter","el","FillterNull","CoinStatus","props","setStatus","coinName","e","includes","push","Test","isCandle","coinCandle","setCoinCandle","x","Date","timestamp","y","opening_price","Chart","candle","options","plotOptions","candlestick","colors","upward","downward","chart","type","height","brush","enabled","target","autoScaleYaxis","title","text","align","xaxis","labels","datetimeUTC","yaxis","tooltip","stroke","show","curve","lineCap","width","dashArray","legend","setIsCandle","CandleUrl","className","series","Search","Input","withRouter","searchText","setSearchText","tableSetting","setTableSetting","isModalVisible","setIsModalVisible","modalChart","setModalChart","isInfoModalVisible","setisInfoCoinModalVisible","modalInfo","setModalInfo","handleOk","handleCancel","infoCancel","infoOk","temp","onSearch","reg","RegExp","value","filteredData","record","nameMatch","match","priceMatch","String","columns","dataIndex","key","sorter","b","localeCompare","ellipsis","render","index","style","color","display","textOverflow","overflow","whiteSpace","wordBreak","onClick","values","toLowerCase","then","response","description","ko","catch","showModal","alignItems","textAlign","margin","size","onChange","placeholder","onPressEnter","pagination","dataSource","visible","onOk","onCancel","resize","footer","LOGIN_USER","REGISTER_USER","AUTH_USER","WRITE_BOARD","SELECT_BOARD","SELECT_BOARD_LIST","UPDATE_BOARD","DELETE_BOARD","auth","request","payload","dispatch","useDispatch","justifyContent","initialValues","remember","onFinish","dataTosubmit","post","loginUser","loginSuccess","history","alert","Item","rules","required","message","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","href","htmlType","formItemLayout","Select","Option","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","Form","useForm","form","password","ConfirmPassword","registerUser","success","scrollToFirstError","label","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","whitespace","setTemp","clone","setClone","Api","username","usertitle","to","id","marginLeft","News","image","summary","date","src","alt","NewsDatas","setNewsDatas","news","SpecificComponent","option","adminRouter","AuthenticationCheck","isAuth","isAdmin","AliwangwangOutlined","fontSize","MarketCapitalization","classNale","InstagramOutlined","marginRight","ImageUrl","year","trustScore","trustScoreRank","site","setSite","MarketSite","year_established","trust_score","trust_score_rank","TextArea","email","setEmail","error","user_name","user_email","writeBoard","boardWriteSuccess","flexDirection","showCount","maxLength","params","write_date","content","deleteBoard","boardDeleteSuccess","goBack","App","exact","path","component","LandingPage","Auth","LoginPage","RegisterPage","Community","CoinNewsPage","CoinSite","Info","WritePost","Post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","user","state","action","regiser","userData","board","writeSuccess","boardData","deleteSuccess","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","store","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"mbAyBeA,MAtBf,SAAkBC,GAAM,IAAD,EACKC,mBAAS,MADd,mBACZC,EADY,KACNC,EADM,KAGbC,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,IAAMC,IAAIP,GAFzB,gBAEAQ,EAFA,EAEAA,KACRL,EAAQK,GAHA,gDAMRC,QAAQC,IAAI,OANJ,qGAAH,qDAiBb,OALAC,qBAAU,WACNP,MACD,IAGIF,G,gBCrBLU,EAAQ,SAACC,GAEX,OAAOA,EAAOC,WAAWC,QAAQ,wBAAyB,MAkG/CC,EA/FM,SAACC,GAAW,IAAD,EACMhB,mBAAS,IADf,mBACrBiB,EADqB,KACVC,EADU,KA4F5B,OAPAR,qBAAU,WAjFFM,GACAE,EACIF,EAAMG,QACF,SAACC,EAAQC,GAAT,4BACOD,GADP,CAEI,CACIE,SAAS,GAAD,OAAKD,EAAKE,YAAV,aAA0BF,EAAKG,OAAOC,MAAM,KAAK,GAAjD,KACRT,MAAM,GAAD,OAAKL,EAAMU,EAAKK,aAAhB,UACLC,YAAY,GAAD,QAAgC,IAA1BN,EAAKO,oBAA0BC,QAAQ,GAA7C,eAAsDlB,EAC7DU,EAAKS,qBADE,WAGXC,oBAAoB,GAAD,OAAKpB,EAAMU,EAAKU,oBAAoBF,QAAQ,IAA5C,UACnBG,sBACIX,EAAKK,aAAeL,EAAKW,sBAAzB,WAEU,IACCC,KAAKC,MACDb,EAAKK,YAAcL,EAAKW,sBAAyB,KAElD,IACA,KACNH,QAAQ,GARhB,iBAUU,IACCI,KAAKC,MACDb,EAAKK,YAAcL,EAAKW,sBAAyB,KAElD,IACA,KACNH,QAAQ,GAhBhB,KAiBJM,qBACId,EAAKK,aAAeL,EAAKc,qBAAzB,YAEWF,KAAKC,MACDb,EAAKK,YAAcL,EAAKc,qBAAwB,KAEjD,IACJ,KACFN,QAAQ,GAPhB,gBASWI,KAAKC,MACDb,EAAKK,YAAcL,EAAKc,qBAAwB,KAEjD,IACJ,KACFN,QAAQ,GAdhB,KAeJO,qBAAsBf,EAAKe,qBAC3BC,oBAAqBhB,EAAKgB,oBAC1BC,WAAYjB,EAAKiB,WAAWxB,QACxB,yBACA,YAEJU,OAAQH,EAAKG,OACbe,WAAYlB,EAAKkB,WACjBC,UAAWnB,EAAKmB,UAChBC,cAAepB,EAAKE,YACpBmB,WAAYrB,EAAKK,YACjBiB,2BACKV,KAAKC,MACDb,EAAKK,YAAcL,EAAKW,sBAAyB,KAElD,IACJ,IACJY,0BACKX,KAAKC,MAAOb,EAAKK,YAAcL,EAAKc,qBAAwB,KACzD,IACJ,IACJU,iBAA4C,IAA1BxB,EAAKO,mBACvBkB,yBAA0BzB,EAAKU,oBAC/BgB,MAAO1B,EAAKW,sBACZgB,MAAO3B,EAAKE,YACZ0B,aAAc5B,EAAK4B,aACnBC,UAAW7B,EAAK4B,aAAe,MAAQ5B,EAAKG,YAGpD,OAQb,CAACR,IAKGC,GC3DIkC,EApCG,SAACC,EAAQnD,GAAU,IAAD,EACED,qBADF,mBACzBqD,EADyB,KACdC,EADc,OAENtD,qBAFM,mBAEzBgB,EAFyB,KAElBuC,EAFkB,KAiChC,OARA7C,qBAAU,WAnBF0C,IACAE,EACIrD,EAAKuD,KAAI,SAACC,GACN,IAAMC,EAASN,EAAOO,MAAK,SAACC,GAAD,OAAQH,EAAGjC,SAAWoC,EAAGpC,UACpD,OAAOkC,EAAM,2BAAQD,GAAOC,GAAW,SAGvC,KAcb,CAACN,IAEJ1C,qBAAU,YAZU,SAAC2C,QACCQ,IAAdR,GAEAE,EAASF,EAAUS,QAAO,SAACC,GAAD,OAAc,MAANA,MAUtCC,CAAYX,KACb,CAACA,IAEGrC,GCCIiD,MAlCf,SAAoBC,GAAQ,IAAD,EACKlE,mBAAS,MADd,mBAChBoD,EADgB,KACRe,EADQ,KAGnBC,EAAW,GAETjE,EAAO,uCAAG,8BAAAC,EAAA,sEAER8D,EAAMV,KAAI,SAACa,GACHA,EAAE7C,OAAO8C,SAAS,QAAQF,EAASG,KAAKF,EAAE7C,WAH1C,SAKenB,IAAMC,IAAN,kDACwB8D,EAASvD,aANhD,gBAKAN,EALA,EAKAA,KAGR4D,EAAU5D,GARF,qJAAH,qDA2Bb,OATAG,qBAAU,WACNP,MACD,CAAC+D,IAOGd,G,6ECVX,IAAMoB,EAAO,SAACC,GAAa,MAIazE,mBAAS,MAJtB,mBAIhB0E,EAJgB,KAIJC,EAJI,KA2CvB,OAXAjE,qBAAU,WAzBF+D,GACAE,EACIF,EAAStD,QACL,SAACC,EAAQC,GAAT,4BACOD,GADP,CAEI,CACIb,KAAM,CACF,CACIqE,EAAG,IAAIC,KAAKxD,EAAKyD,WACjBC,EAAG,CACC1D,EAAK2D,cACL3D,EAAKkB,WACLlB,EAAKmB,UACLnB,EAAKK,oBAMzB,OAQb,CAAC+C,IASG,CAAEC,eA2EEO,EAxED,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACIlF,mBAAS,CACnCmF,QAAS,CACLC,YAAa,CACTC,YAAa,CACTC,OAAQ,CACJC,OAAQ,UACRC,SAAU,aAItBC,MAAO,CACHC,KAAM,cACNC,OAAQ,IACRC,MAAO,CACHC,SAAS,EACTC,YAAQjC,EACRkC,gBAAgB,IAGxBC,MAAO,CACHC,KAAM,2BACNC,MAAO,QAEXC,MAAO,CACHC,OAAQ,CACJC,aAAa,GAEjBX,KAAM,YAEVY,MAAO,CACHC,QAAS,CACLV,SAAS,IAGjBW,OAAQ,CACJC,MAAM,EACNC,MAAO,SACPC,QAAS,OACTrB,YAAQzB,EACR+C,MAAO,EACPC,UAAW,GAGfC,OAAQ,CACJL,MAAM,MA7CQ,mBACnBtB,EADmB,KAkDlBV,GAlDkB,KAnE9B,SAAmB1E,GAAK,MAEYC,mBAAS,MAFrB,mBAEbyE,EAFa,KAEHsC,EAFG,KAKd5G,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,IAAMC,IAAIP,GAFzB,gBAEAQ,EAFA,EAEAA,KACRwG,EAAYxG,GAHJ,8FAAH,qDAab,OAJAG,qBAAU,WACNP,MACD,CAACJ,IAEG,CAAE0E,YAmGYuC,CAAU,sDAAD,OAC4B9B,EAD5B,cAAtBT,UAGAC,EAAeF,EAAKC,GAApBC,WAER,OACI,8BACKA,GACG,sBAAKuC,UAAU,QAAf,UACI,+BAAK/B,EAAOzD,MAAM,KAAK,GAAvB,mBACA,cAAC,IAAD,CACI0D,QAASA,EAAQA,QACjB+B,OAAQxC,EACRgB,KAAK,cACLC,OAAQ,YC5H1BwB,G,OAASC,IAAMD,QAkNNE,mBAhNf,SAAqBnD,GAAQ,IAAD,EACYlE,mBAAS,IADrB,mBACjBsH,EADiB,KACLC,EADK,OAEgBvH,qBAFhB,mBAEjBwH,EAFiB,KAEHC,EAFG,KAGlBxH,EAAOH,EAAS,uCAHE,EAKoBE,oBAAS,GAL7B,mBAKjB0H,EALiB,KAKDC,EALC,OAMY3H,mBAAS,IANrB,mBAMjB4H,EANiB,KAMLC,EANK,OAOgC7H,oBAAS,GAPzC,mBAOjB8H,EAPiB,KAOGC,EAPH,OAQU/H,mBAAS,IARnB,mBAQjBgI,EARiB,KAQNC,EARM,KA4BlBC,EAAW,WACbP,GAAkB,IAGhBQ,EAAe,WACjBR,GAAkB,IAQhBS,EAAa,WACfL,GAA0B,IAExBM,EAAS,WACXN,GAA0B,IAIxB3E,EAASa,EAAWhE,GACpBe,EAAQmC,EAAUC,EAAQnD,GAC1BqI,EAAOvH,EAAaC,GAE1BN,qBAAU,WACN+G,EAAgBa,KACjB,CAACA,IAEJ,IAAMC,EAAW,SAAClE,GACd,IAAMmE,EAAM,IAAIC,OAAOpE,EAAEyB,OAAO4C,MAAO,MACjCC,EAAenF,cAAI8E,GAAM,SAACM,GAC5B,IAAMC,EAAYvI,cAAIsI,EAAQ,YAAYE,MAAMN,GAC1CO,EAAaC,OAAO1I,cAAIsI,EAAQ,eAAeE,MAAMN,GAC3D,OAAKK,GAAcE,EAGZH,EAFI,QAGZ9E,QAAO,SAAC8E,GAAD,QAAcA,KAExBrB,EAAclD,EAAEyB,OAAO4C,OACvBjB,EAAgBpD,EAAEyB,OAAO4C,MAAQC,EAAeL,IAG9CW,EAAU,CACZ,CACIjD,MAAO,eACPkD,UAAW,WACXC,IAAK,WACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAEqC,cAAc6G,cAAcD,EAAE5G,gBAClD8G,UAAU,GAEd,CACIvD,MAAO,qBACPkD,UAAW,QACXC,IAAK,QACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAEsC,WAAa2G,EAAE3G,YACnC6G,UAAU,GAEd,CACIvD,MAAO,2BACPkD,UAAW,cACXC,IAAK,cACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAEyC,iBAAmBwG,EAAExG,kBACzC0G,UAAU,GAEd,CACIvD,MAAO,2BACPkD,UAAW,wBACXC,IAAK,wBACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAEuC,2BAA6B0G,EAAE1G,4BACnD4G,UAAU,GAEd,CACIvD,MAAO,2BACPkD,UAAW,uBACXC,IAAK,uBACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAEwC,0BAA4ByG,EAAEzG,2BAClD2G,UAAU,GAEd,CACIvD,MAAO,2BACPkD,UAAW,sBACXC,IAAK,sBACLC,OAAQ,SAAChJ,EAAGiJ,GAAJ,OAAUjJ,EAAE0C,yBAA2BuG,EAAEvG,0BACjDyG,UAAU,GAEd,CACIvD,MAAO,eACPkD,UAAW,YACXM,OAAQ,SAACvD,EAAM2C,EAAQa,GACnB,OACI,mCAEI,+BACI,mBACIC,MAAO,CACHC,MAAO,QACPC,QAAS,OACTC,aAAc,WACdC,SAAU,SACVC,WAAY,SACZC,UAAW,YAEftE,KAAK,UACLuE,QAAS,kBA3HnB,SAAC5F,GACfwD,EAAcxD,EAAE7C,QAChB,IAAM0I,EAAS7F,EAAEpB,aAAakH,cAAcrJ,QAAQ,IAAK,KAC7CT,IACPC,IADO,iDAEsC4J,EAFtC,uDAIPE,MAAK,SAACC,GAEH,OADApC,EAAaoC,EAAS9J,KAAK+J,YAAYC,IAChCF,EAAS9J,KAAK+J,YAAYC,MAEpCC,OAAM,WACHvC,EAAa,6CAGrBN,GAAkB,GA4GqB8C,CAAU7B,IAV7B,2DAoBxB,OAEI,aADA,CACA,OAAKc,MAAO,CAAEgB,WAAY,SAAUC,UAAW,UAA/C,SACKnD,GACG,sBAAKkC,MAAO,CAAE9C,MAAO,MAAOgE,OAAQ,QAApC,UACI,uBACA,cAACzD,EAAD,CACI0D,KAAK,QACLC,SAAUvC,EACVwC,YAAY,iBACZrC,MAAOpB,EACP0D,aAAczC,IAElB,cAAC,IAAD,CAAO0C,YAAY,EAAOhC,QAASA,EAASiC,WAAY1D,IACxD,cAAC,IAAD,CACIxB,MAAM,kCACNmF,QAASzD,EACT0D,KAAMlD,EACNmD,SAAUlD,EACVuB,MAAO,CAAE9C,MAAO,OAAQ0E,OAAQ,QAEhCC,OAAQ,CACJ,cAAC,IAAD,CAAmB7F,KAAK,UAAUuE,QAjIzC,WACblC,GAA0B,GAC1BJ,GAAkB,IA+HE,sCAAY,QAGZ,cAAC,IAAD,CAAmBsC,QAAS9B,EAA5B,mBAAY,QAGZ,cAAC,IAAD,CAAqBzC,KAAK,UAAUuE,QAAS/B,EAA7C,eAAY,WAdpB,SAmBI,cAAC,EAAD,CAAOhD,OAAQ0C,MAEnB,cAAC,IAAD,CACI5B,MAAM,wCACNmF,QAASrD,EACTsD,KAAM/C,EACNgD,SAAUjD,EACVsB,MAAO,CAAE9C,MAAO,OAAQ0E,OAAQ,QAChCC,OAAQ,CACJ,cAAC,IAAD,CAAmBtB,QAAS7B,EAA5B,mBAAY,QAGZ,cAAC,IAAD,CAAqB1C,KAAK,UAAUuE,QAAS5B,EAA7C,eAAY,WAVpB,SAeKL,EAAUvG,MAAM,MAAM+B,KAAI,SAACa,GACxB,OACI,iCACKA,EACD,uC,QCnNvBmH,EAAa,aACbC,EAAgB,gBAChBC,EAAY,YAEZC,EAAc,cACdC,EAAe,eACfC,EAAoB,oBACpBC,EAAe,eACfC,EAAe,eCuBrB,SAASC,IACZ,IAAMC,EAAU5L,IACXC,IAAI,+EACJ8J,MAAK,SAACC,GAAD,OAAcA,EAAS9J,QAEjC,MAAO,CACHmF,KAAMgG,EACNQ,QAASD,G,wCCqDF5E,G,OAAAA,aAhFG,SAACnD,GACf,IAAMiI,EAAWC,cAYjB,OACI,qBACI1C,MAAO,CACHE,QAAS,OACTyC,eAAgB,SAChB3B,WAAY,SACZ9D,MAAO,OACPjB,OAAQ,SANhB,SASI,eAAC,IAAD,CACI1F,KAAK,eACLgH,UAAU,aACVqF,cAAe,CACXC,UAAU,GAEdC,SA1BK,SAACtC,GACdiC,EDZD,SAAmBM,GACtB,IAAMR,EAAU5L,IACXqM,KACG,+EACAD,GAEHrC,MAAK,SAACC,GAAD,OAAcA,EAAS9J,QAEjC,MAAO,CACHmF,KAAM8F,EACNU,QAASD,GCEAU,CAAUzC,IAASE,MAAK,SAACC,GAC1BA,EAAS6B,QAAQU,aACjB1I,EAAM2I,QAAQtI,KAAK,KAEnBuI,MAAM,aAeV,UAQI,cAAC,IAAKC,KAAN,CACI9M,KAAK,QACL+M,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCALrB,SASI,cAAC,IAAD,CACIC,OAAQ,cAACC,EAAA,EAAD,CAAcnG,UAAU,wBAChC8D,YAAY,eAGpB,cAAC,IAAKgC,KAAN,CACI9M,KAAK,WACL+M,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCALrB,SASI,cAAC,IAAD,CACIC,OAAQ,cAACE,EAAA,EAAD,CAAcpG,UAAU,wBAChCvB,KAAK,WACLqF,YAAY,eAGpB,eAAC,IAAKgC,KAAN,WACI,cAAC,IAAKA,KAAN,CAAW9M,KAAK,WAAWqN,cAAc,UAAUC,SAAO,EAA1D,SACI,cAAC,IAAD,4BAGJ,mBAAGtG,UAAU,oBAAoBuG,KAAK,GAAtC,gCAIJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAQrH,KAAK,UAAU+H,SAAS,SAASxG,UAAU,oBAAnD,sBA/CR,MAmDO,mBAAGuG,KAAK,YAAR,oC,SC3EbE,G,OAFaC,IAAXC,OAEe,CACnBC,SAAU,CACNC,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,IAGdE,WAAY,CACRH,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,OAIZG,EAAqB,CACvBD,WAAY,CACRH,GAAI,CACAC,KAAM,GACNI,OAAQ,GAEZH,GAAI,CACAD,KAAM,GACNI,OAAQ,KA+JL9G,eA1JM,SAACnD,GAClB,IAAMiI,EAAWC,cADW,EAEbgC,IAAKC,UAAbC,EAFqB,sBAmBwBtO,mBAAS,IAnBjC,6BAqB5B,OACI,qBACI0J,MAAO,CACHE,QAAS,OACTyC,eAAgB,SAChB3B,WAAY,SACZ9D,MAAO,OACPjB,OAAQ,SANhB,SASI,eAAC,IAAD,2BACQ+H,GADR,IAEIY,KAAMA,EACNrO,KAAK,WACLuM,SA/BK,SAACtC,GAEd,GADA1J,QAAQC,IAAIyJ,GACRA,EAAOqE,WAAarE,EAAOsE,gBAC3B,OAAO1B,MAAM,qHAGjBX,EFlCD,SAAsBM,GACzB,IAAMR,EAAU5L,IACXqM,KACG,kFACAD,GAEHrC,MAAK,SAACC,GAAD,OAAcA,EAAS9J,QAEjC,MAAO,CACHmF,KAAM+F,EACNS,QAASD,GEwBAwC,CAAavE,IAASE,MAAK,SAACC,GAC7BA,EAAS6B,QAAQwC,QACjBxK,EAAM2I,QAAQtI,KAAK,UAEnBuI,MAAM,yBAsBN6B,oBAAkB,EALtB,UAOI,cAAC,IAAK5B,KAAN,CACI9M,KAAK,QACL2O,MAAM,SACN5B,MAAO,CACH,CACItH,KAAM,QACNwH,QAAS,kCAEb,CACID,UAAU,EACVC,QAAS,8BAVrB,SAcI,cAAC,IAAD,MAGJ,cAAC,IAAKH,KAAN,CACI9M,KAAK,WACL2O,MAAM,WACN5B,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,gCAGjB2B,aAAW,EATf,SAWI,cAAC,IAAMC,SAAP,MAGJ,cAAC,IAAK/B,KAAN,CACI9M,KAAK,kBACL2O,MAAM,UACNG,aAAc,CAAC,YACfF,aAAW,EACX7B,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,iCAEb,gBAAG8B,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAGxG,GACT,OAAKA,GAASsG,EAAc,cAAgBtG,EAIrCyG,QAAQC,OACX,IAAIC,MAAM,qDAJHF,QAAQG,cAbnC,SAuBI,cAAC,IAAMR,SAAP,MAGJ,cAAC,IAAK/B,KAAN,CACI9M,KAAK,OACL2O,MAAM,OACNrI,QAAQ,uCACRyG,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,0BACTqC,YAAY,IARxB,SAYI,cAAC,IAAD,MAGJ,cAAC,IAAKxC,KAAN,CACI9M,KAAK,cACL2O,MAAM,QACN5B,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,oCANrB,SAUI,cAAC,IAAD,CACIxD,MAAO,CACH9C,MAAO,YAKnB,cAAC,IAAKmG,KAAN,yBACI9M,KAAK,YACLqN,cAAc,UACdN,MAAO,CACH,CACIiC,UAAW,SAACC,EAAGxG,GAAJ,OACPA,EACMyG,QAAQG,UACRH,QAAQC,OAAO,IAAIC,MAAM,gCAGvCnB,GAXR,aAaI,eAAC,IAAD,8BACoB,mBAAGV,KAAK,GAAR,6BAGxB,cAAC,IAAKT,KAAN,2BAAemB,GAAf,aACI,cAAC,IAAD,CAAQxI,KAAK,UAAU+H,SAAS,SAAhC,kCCpLdtG,G,OAASC,IAAMD,QAkHNE,mBAhHf,SAAmBnD,GAAQ,IAAD,EACElE,mBAAS,IADX,mBACfsI,EADe,KACTkH,EADS,OAEcxP,mBAAS,IAFvB,mBAEfsH,EAFe,KAEHC,EAFG,OAGIvH,qBAHJ,mBAGfyP,EAHe,KAGRC,EAHQ,KAKhBC,EAAG,uCAAG,8BAAAvP,EAAA,sEACeC,IAAMqM,KACzB,qFAFI,gBACAnM,EADA,EACAA,KAGRiP,EAAQjP,GACRmP,EAASnP,GALD,2CAAH,qDAOTC,QAAQC,IAAIgP,GAEZ,IAIMlH,EAAW,SAAClE,GACd,IAAMmE,EAAM,IAAIC,OAAOpE,EAAEyB,OAAO4C,MAAO,MACjCC,EAAenF,cAAIiM,GAAO,SAAC7G,GAC7B,IAAMgH,EAAWtP,cAAIsI,EAAQ,aAAaE,MAAMN,GAC1CqH,EAAY7G,OAAO1I,cAAIsI,EAAQ,UAAUE,MAAMN,GACrD,OAAKoH,GAAaC,EAGXjH,EAFI,QAGZ9E,QAAO,SAAC8E,GAAD,QAAcA,KAExBrB,EAAclD,EAAEyB,OAAO4C,OAEvB8G,EAAQnL,EAAEyB,OAAO4C,MAAQC,EAAe8G,IAG5C/O,qBAAU,WACNiP,MACD,IAEH,IAAM1G,EAAU,CACZ,CACIjD,MAAO,eACPkD,UAAW,QACXC,IAAK,QACLI,UAAU,GAEd,CACIvD,MAAO,qBACPkD,UAAW,YACXC,IAAK,YACLI,UAAU,GAEd,CACIvD,MAAO,eACPkD,UAAW,UACXC,IAAK,UACLI,UAAU,EACVC,OAAQ,SAACvD,EAAM2C,EAAQa,GACnB,OACI,mCACI,cAAC,IAAD,CAAMqG,GAAE,qBAAgBlH,EAAOmH,IAAMrG,MAAO,CAAEC,MAAO,SAArD,SACK1D,QAMrB,CACID,MAAO,OACPkD,UAAW,aACXC,IAAK,aACLI,UAAU,IAGlB,OAEI,aADA,CACA,gBACKjB,GACG,qBAAKrB,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,uBACA,sBAAKA,UAAU,UAAf,UACI,oBAAIyC,MAAO,CAAEsG,WAAY,QAAzB,sCACA,qBAAKtG,MAAO,CAAEkB,OAAQ,QAAtB,SACI,cAAC,IAAD,CACIkF,GAAG,uBACHpG,MAAO,CAAEC,MAAO,QAASqG,WAAY,QAFzC,SAII,+DAIZ,cAAC,EAAD,CACInF,KAAK,QACLC,SAAUvC,EACVwC,YAAY,iBACZrC,MAAOpB,EACP0D,aAAczC,IAElB,cAAC,IAAD,CACImB,MAAO,CAAE9C,MAAO,OAAQgE,OAAQ,QAChCK,YAAY,EACZhC,QAASA,EACTiC,WAAY5C,c,OChFzB2H,OA1Bf,YAAyD,EAAzC9G,IAA0C,IAArCpJ,EAAoC,EAApCA,IAAKmQ,EAA+B,EAA/BA,MAAOlK,EAAwB,EAAxBA,MAAOmK,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAC7C,OACI,qBAAKnJ,UAAU,YAAf,SACI,oBAAGuG,KAAMzN,EAAT,UACI,qBAAKkH,UAAU,cAAf,SACI,qBAAKoJ,IAAKH,EAAOI,IAAKtK,MAE1B,sBAAKiB,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BjB,IAC7B,oBAAIiB,UAAU,aAAd,SAA4BmJ,IAC5B,mBAAGnJ,UAAU,gBAAb,SAA8BkJ,aCkBnC9I,oBA3Bf,SAAsBnD,GAAQ,IAAD,EACSlE,mBAAS,IADlB,mBAClBuQ,EADkB,KACPC,EADO,KASzB,OANA9P,qBAAU,WACNL,IAAMC,IAAI,sBAAsB8J,MAAK,SAACC,GAClCmG,EAAanG,EAAS9J,WAE3B,IAGC,yBAAS0G,UAAU,iBAAnB,SACI,qBAAKA,UAAU,kBAAf,SACKsJ,EAAU/M,KAAI,SAACiN,GAAD,OACX,cAAC,GAAD,CAEI1Q,IAAK,4BAA8B0Q,EAAK1Q,IACxCmQ,MAAOO,EAAKP,MACZlK,MAAOyK,EAAKzK,MACZmK,QAASM,EAAKN,QACdC,KAAMK,EAAKL,MALNK,EAAK1Q,eCdnB,YAAU2Q,EAAmBC,GAA6B,IAArBC,EAAoB,uDAAN,KAK9D,SAASC,EAAoB3M,GACzB,IAAMiI,EAAWC,cAoBjB,OAlBA1L,qBAAU,WACNyL,EAASH,KAAQ5B,MAAK,SAACC,GACnB7J,QAAQC,IAAI4J,GAEPA,EAAS6B,QAAQ4E,QAKdF,IAAgBvG,EAAS6B,QAAQ6E,UAGlB,IAAXJ,IAFJzM,EAAM2I,QAAQtI,KAAK,KALnBoM,GACAzM,EAAM2I,QAAQtI,KAAK,eAUhC,IAEI,cAACmM,EAAD,IAGX,OAAOG,G,WClCI,I,QC6DAxJ,oBArDf,SAAgBnD,GAmBZ,OACI,8BACI,sBAAK+C,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,eAAC,IAAD,CAAM6I,GAAG,IAAT,UACI,cAACkB,GAAA,EAAD,CACItH,MAAO,CAAEuH,SAAU,OAAQjB,WAAY,OAAQrG,MAAO,WAE1D,+CAGR,qBAAI1C,UAAU,OAAd,UACI,6BACI,cAAC,IAAD,CAAM6I,GAAG,aAAT,wCAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,4BAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,YAAT,8CAEJ,6BACI,cAAC,IAAD,CAAMA,GAAG,QAAT,+BAGR,sBAAK7I,UAAU,MAAf,UACI,cAAC,IAAD,CAAM6I,GAAG,SAAT,gCACA,cAAC,IAAD,CAAM7F,QAzCC,WACnB5J,IAAMC,IAAI,qBAAqB8J,MAAK,SAACC,GAC7BA,EAAS9J,KAAKmO,QACdxK,EAAM2I,QAAQtI,KAAK,UAEnBuI,MAAM,yFAoCF,iDChDLoE,GAJc,WACzB,OAAO,0C,UC+GI7J,I,OAAAA,aA3GF,WACT,OACI,sBAAKJ,UAAU,YAAf,UACI,qBAAKA,UAAU,aAAf,SACI,oBAAIA,UAAU,QAAd,SACI,sEAGR,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,6BACA,kqBAMA,6fAMJ,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,6BACA,qdAKA,qjBAKA,wXAIA,wpBAMA,uPA8BJ,gCACI,oBAAIA,UAAU,QAAd,mCACA,sBAAKA,UAAU,WAAf,UACI,sBAAKkK,UAAU,QAAf,4CAEI,mBAAG3D,KAAK,2CAAR,SACI,cAAC4D,GAAA,EAAD,CACI1H,MAAO,CAAEsG,WAAY,MAAOqB,YAAa,MAAO1H,MAAO,gBAInE,sBAAKwH,UAAU,QAAf,2CAEI,mBAAG3D,KAAK,sCAAR,SACI,cAAC4D,GAAA,EAAD,CACI1H,MAAO,CAAEsG,WAAY,MAAOqB,YAAa,MAAO1H,MAAO,gBAInE,sBAAKwH,UAAU,QAAf,wCAEI,mBAAG3D,KAAK,0CAAR,SACI,cAAC4D,GAAA,EAAD,CACI1H,MAAO,CAAEsG,WAAY,MAAOqB,YAAa,MAAO1H,MAAO,6B,OCnFxE2H,OAlBf,YAA2E,IAAvDvR,EAAsD,EAAtDA,IAAKE,EAAiD,EAAjDA,KAAMiQ,EAA2C,EAA3CA,MAAOqB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAEpD,OADa,OAATF,IAAeA,EAAO,+BAEtB,qBAAKtK,UAAU,aAAf,SACI,oBAAGuG,KAAMzN,EAAT,UACI,6BAAK0R,IACL,sBACA,qBAAKpB,IAAKH,EAAOI,IAAKrQ,EAAM+F,MAAO/F,IACnC,sBAAKgH,UAAU,mBAAf,UACI,qBAAIA,UAAU,oBAAd,kCAAyChH,KACzC,qBAAIgH,UAAU,mBAAd,wCAAyCsK,KACzC,qBAAItK,UAAU,yBAAd,kCAA8CuK,c,OCclE,IAsBenK,gBAtBE,WACb,IAAMqK,EAvBV,SAAoB3R,GAAM,IAAD,EACGC,mBAAS,MADZ,mBACd0R,EADc,KACRC,EADQ,KAGfxR,EAAO,uCAAG,8BAAAC,EAAA,+EAEeC,IAAMC,IAAIP,GAFzB,gBAEAQ,EAFA,EAEAA,KACRoR,EAAQpR,GAHA,gDAMRC,QAAQC,IAAI,OANJ,yBAQRD,QAAQC,IAAI,SARJ,4EAAH,qDAgBb,OAJAC,qBAAU,WACNP,MACD,IAEIuR,EAIME,CAAW,2DAExB,OACI,yBAAS3K,UAAU,YAAnB,SACI,qBAAKA,UAAU,cAAf,SACKyK,GACGA,EAAKlO,KAAI,SAACa,GAAD,OACL,cAAC,GAAD,CACIpE,KAAMoE,EAAEpE,KACRF,IAAKsE,EAAEtE,IACPmQ,MAAO7L,EAAE6L,MACTqB,KAAMlN,EAAEwN,iBACRL,WAAYnN,EAAEyN,YACdL,eAAgBpN,EAAE0N,6B,SCjC9C,IAoFe1K,gBApFF,SAACnD,GAAW,IAAD,EACdiI,EAAWC,cAGT4F,EAAa5K,IAAb4K,SAJY,EAKIhS,qBALJ,mBAKbC,EALa,KAKPC,EALO,OAMMF,qBANN,mBAMbiS,EANa,KAMNC,EANM,KAQpBxR,qBAAU,WACNyL,EAASH,KAAQ5B,MAAK,SAACC,GACnB7J,QAAQC,IAAI4J,GACRA,EAAS6B,QAAQiG,QACjBrF,MAAM,qEACN5I,EAAM2I,QAAQtI,KAAK,eAEvBrE,EAAQmK,EAAS6B,QAAQjM,MACzBiS,EAAS7H,EAAS6B,QAAQ+F,YAE/B,IAeH,OACI,eAAC,IAAD,CACIzF,SAfS,SAACtC,GACdA,EAAOkI,UAAYnS,EACnBiK,EAAOmI,WAAaJ,EACpBzR,QAAQC,IAAIyJ,GACZiC,EC9BD,SAAoBM,GACvB,IAAMR,EAAU5L,IACXqM,KACG,+EACAD,GAEHrC,MAAK,SAACC,GAAD,OAAcA,EAAS9J,QAEjC,MAAO,CACHmF,KAAMiG,EACNO,QAASD,GDoBAqG,CAAWpI,IAASE,MAAK,SAACC,GAC3BA,EAAS6B,QAAQqG,kBACjBrO,EAAM2I,QAAQtI,KAAK,cAEnBuI,MAAM,wCAQVpD,OAAK,GACDiB,UAAW,SACXf,QAAS,OACT4I,cAAe,SACfnG,eAAgB,SAChB3B,WAAY,SAEZ/E,OAAQ,QACRiF,OAAQ,QARP,4BASW,UATX,uBAUM,OAVN,GAFT,UAeI,gCACI,mBAAGlB,MAAO,CAAE2H,YAAa,OAAzB,4BACA,cAAC,IAAKtE,KAAN,CACI9M,KAAK,QACL+M,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uBALrB,SASI,+BAIR,cAAC,IAAKH,KAAN,CACI9M,KAAK,UACL+M,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uBALrB,SASI,cAAC8E,EAAD,CAAUS,WAAS,EAACC,UAAW,QAEnC,cAAC,IAAK3F,KAAN,UACI,cAAC,IAAD,CAAQrH,KAAK,UAAU+H,SAAS,SAAhC,kCEADpG,gBA9EF,SAAC,GAAwB,IAAD,EAArByB,EAAqB,EAArBA,MAAO+D,EAAc,EAAdA,QAAc,EACT7M,mBAAS,IADA,mBAC1BsI,EAD0B,KACpBkH,EADoB,KAE3BO,EAAKjH,EAAM6J,OAAO5C,GAElB5D,EAAWC,cAYXuD,EAAG,uCAAG,8BAAAvP,EAAA,sEACeC,IAAMqM,KACzB,gFACA,CAAEqD,OAHE,gBACAxP,EADA,EACAA,KAIRiP,EAAQjP,GALA,2CAAH,qDAYT,OAJAG,qBAAU,WACNiP,MACD,IAGC,sBACIjG,OAAK,GACDE,QAAS,OACT4I,cAAe,SACfnG,eAAgB,SAChB3B,WAAY,SAEZ/E,OAAQ,QACRiF,OAAQ,QAPP,4BAQW,UARX,uBASM,OATN,GADT,UAaI,sBAAKlB,MAAO,CAAEE,QAAS,QAAvB,UACI,iDACA,qBAAK3C,UAAU,aAAf,SAA6BqB,EAAKtC,WAGtC,sBAAK0D,MAAO,CAAEE,QAAS,QAAvB,UACI,uDACA,qBAAK3C,UAAU,aAAf,SAA6BqB,EAAK8J,eAGtC,sBAAK1I,MAAO,CAAEE,QAAS,QAAvB,UACI,uDACA,qBAAK3C,UAAU,aAAf,SAA6BqB,EAAK+J,gBAGtC,sBAAK3I,MAAO,CAAEE,QAAS,QAAvB,UACI,uDACA,qBAAK3C,UAAU,aAAf,SAA6BqB,EAAKsK,gBAGtC,qBAAKlJ,MAAO,CAAEE,QAAS,QAAvB,SACI,qBAAK3C,UAAU,eAAf,SAA+BqB,EAAKuK,YAGxC,sBAAKnJ,MAAO,CAAEE,QAAS,QAAvB,UACI,cAAC,IAAD,CAAMkG,GAAG,aAAapG,MAAO,CAAEC,MAAO,QAAS0H,YAAa,OAA5D,0BAGA,mBAAG3H,MAAO,CAAEC,MAAO,QAASqG,WAAY,OAAS/F,QAhEzC,WAChBkC,ED6CD,SAAqBM,GACxB,IAAMR,EAAU5L,IACXqM,KACG,gFACAD,GAEHrC,MAAK,SAACC,GAAD,OAAcA,EAAS9J,QAEjC,MAAO,CACHmF,KAAMqG,EACNG,QAASD,GCvDA6G,CAAY,CAAE/C,QAAO3F,MAAK,SAACC,GAC5BA,EAAS6B,QAAQ6G,mBACjBlG,EAAQmG,SAERlG,MAAM,aA2DN,mCCrCDmG,OAvBf,WACI,OACI,cAAC,IAAD,UACI,gCACI,cAAC,GAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,GAAKC,GAAW,KACtD,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,YAAYC,UAAWE,GAAKE,GAAc,KAC5D,cAAC,IAAD,CAAON,OAAK,EAACC,KAAK,aAAaC,UAAWK,IAC1C,cAAC,IAAD,CAAOP,OAAK,EAACC,KAAK,YAAYC,UAAWM,KACzC,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,YAAYC,UAAWO,KACzC,cAAC,IAAD,CAAOT,OAAK,EAACC,KAAK,wBAAwBC,UAAWlC,KACrD,cAAC,IAAD,CAAOgC,OAAK,EAACC,KAAK,QAAQC,UAAWQ,KACrC,cAAC,IAAD,CAAOV,OAAK,EAACC,KAAK,uBAAuBC,UAAWS,KACpD,cAAC,IAAD,CAAOX,OAAK,EAACC,KAAK,iBAAiBC,UAAWU,cCpBnDC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kDCCCO,GAJKC,aAAgB,CAChCC,KCHW,WAA+B,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCACzC,OAAQA,EAAOjP,MACX,KAAK8F,EACD,OAAO,2BAAKkJ,GAAZ,IAAmB9H,aAAc+H,EAAOzI,UAG5C,KAAKT,EACD,OAAO,2BAAKiJ,GAAZ,IAAmBE,QAASD,EAAOzI,UAGvC,KAAKR,EACD,OAAO,2BAAKgJ,GAAZ,IAAmBG,SAAUF,EAAOzI,UAGxC,QACI,OAAOwI,IDZTI,MEHK,WAA+B,IAArBJ,EAAoB,uDAAZ,GAAIC,EAAQ,uCACzC,OAAQA,EAAOjP,MACX,KAAKiG,EACD,OAAO,2BAAK+I,GAAZ,IAAmBK,aAAcJ,EAAOzI,UAG5C,KAAKN,EAIL,KAAKC,EAIL,KAAKC,EACD,OAAO,2BAAK4I,GAAZ,IAAmBM,UAAWL,EAAOzI,UAGzC,KAAKH,EACD,OAAO,2BAAK2I,GAAZ,IAAmBO,cAAeN,EAAOzI,UAG7C,QACI,OAAOwI,MCbbQ,GAA4BC,aAAgBC,KAAmBC,KAAnCF,CAA+CG,MAEjFC,IAAS/L,OACL,cAAC,IAAD,CACIgM,MAAON,GACHO,GACAC,OAAOC,8BAAgCD,OAAOC,gCAHtD,SAMI,cAAC,GAAD,MAMJC,SAASC,eAAe,SAM5B9B,O","file":"static/js/main.50b585ce.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nfunction CoinName(url) {\n    const [name, setName] = useState(null);\n\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setName(data);\n            // console.log(data);\n        } catch {\n            console.log('err');\n        } finally {\n            // console.log('final');\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, []);\n\n    // console.log(name);\n    return name;\n}\nexport default CoinName;\n","import React, { useState, useEffect } from 'react';\n\nconst comma = (number) => {\n    // 가격에 , 붙이기.\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nconst TableSetting = (price) => {\n    const [tableCoin, setTableCoin] = useState([]);\n\n    const personValue = () => {\n        if (price) {\n            setTableCoin(\n                price.reduce(\n                    (result, item) => [\n                        ...result,\n                        {\n                            krw_name: `${item.korean_name} (${item.market.split('-')[1]})`,\n                            price: `${comma(item.trade_price)}원`,\n                            chage_price: `${(item.signed_change_rate * 100).toFixed(2)}%  (${comma(\n                                item.signed_change_price\n                            )}원)`,\n                            acc_trade_price_24h: `${comma(item.acc_trade_price_24h.toFixed(0))}원`,\n                            highest_52_week_price:\n                                item.trade_price >= item.highest_52_week_price\n                                    ? `${(\n                                          100 -\n                                          (Math.round(\n                                              (item.trade_price / item.highest_52_week_price) * 1000\n                                          ) /\n                                              1000) *\n                                              100\n                                      ).toFixed(2)}%`\n                                    : `-${(\n                                          100 -\n                                          (Math.round(\n                                              (item.trade_price / item.highest_52_week_price) * 1000\n                                          ) /\n                                              1000) *\n                                              100\n                                      ).toFixed(2)}%`,\n                            lowest_52_week_price:\n                                item.trade_price <= item.lowest_52_week_price\n                                    ? `-${(\n                                          (Math.round(\n                                              (item.trade_price / item.lowest_52_week_price) * 1000\n                                          ) /\n                                              1000) *\n                                          100\n                                      ).toFixed(2)}%`\n                                    : `${(\n                                          (Math.round(\n                                              (item.trade_price / item.lowest_52_week_price) * 1000\n                                          ) /\n                                              1000) *\n                                          100\n                                      ).toFixed(2)}%`,\n                            highest_52_week_date: item.highest_52_week_date,\n                            lowest_52_week_date: item.lowest_52_week_date,\n                            trade_date: item.trade_date.replace(\n                                /(\\d{4})(\\d{2})(\\d{2})/g,\n                                '$1-$2-$3'\n                            ),\n                            market: item.market,\n                            high_price: item.high_price,\n                            low_price: item.low_price,\n                            krw_name_sort: item.korean_name,\n                            price_sort: item.trade_price,\n                            highest_52_week_price_sort:\n                                (Math.round(\n                                    (item.trade_price / item.highest_52_week_price) * 1000\n                                ) /\n                                    1000) *\n                                100,\n                            lowest_52_week_price_sort:\n                                (Math.round((item.trade_price / item.lowest_52_week_price) * 1000) /\n                                    1000) *\n                                100,\n                            chage_price_sort: item.signed_change_rate * 100,\n                            acc_trade_price_24h_sort: item.acc_trade_price_24h,\n                            hight: item.highest_52_week_price,\n                            modal: item.korean_name,\n                            english_name: item.english_name,\n                            info_name: item.english_name + ' : ' + item.market,\n                        },\n                    ],\n                    []\n                )\n            );\n        }\n    };\n\n    useEffect(() => {\n        personValue();\n    }, [price]);\n\n    // console.log('TableSetting');\n    // console.log(tableCoin);\n\n    return tableCoin;\n};\n\nexport default TableSetting;\n","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport TableSetting from './TableSetting';\n\nconst CoinPrice = (status, name) => {\n    const [nullPrice, setNullPrice] = useState();\n    const [price, setPrice] = useState();\n    let count = 0;\n\n    const arr = () => {\n        if (status) {\n            setNullPrice(\n                name.map((_a) => {\n                    const foundB = status.find((_b) => _a.market === _b.market);\n                    return foundB ? { ..._a, ...foundB } : null;\n                })\n            );\n            count = 1;\n        }\n    };\n\n    const FillterNull = (nullPrice) => {\n        if (nullPrice !== undefined) {\n            // console.log('확인');\n            setPrice(nullPrice.filter((el) => el != null));\n            //\n        }\n    };\n\n    useEffect(() => {\n        arr();\n    }, [status]);\n\n    useEffect(() => {\n        FillterNull(nullPrice);\n    }, [nullPrice]);\n\n    return price;\n};\n\nexport default CoinPrice;\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport CoinPrice from './CoinPrice';\n\nfunction CoinStatus(props) {\n    const [status, setStatus] = useState(null);\n    // const status = {};\n    let coinName = [];\n\n    const callUrl = async () => {\n        try {\n            props.map((e) => {\n                if (e.market.includes('KRW')) coinName.push(e.market);\n            });\n            const { data } = await axios.get(\n                `https://api.upbit.com/v1/ticker?markets=${coinName.toString()}`\n            );\n            setStatus(data);\n\n            // console.log(data);\n        } catch {\n            // console.log('err');\n        } finally {\n            // console.log('final');\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, [props]);\n\n    // console.log(status);\n\n    // const price = CoinPrice(status, props);\n    // console.log(\"CoinStatus\")\n\n    return status;\n}\nexport default CoinStatus;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport ReactApexChart from 'react-apexcharts';\n\nfunction CandleUrl(url) {\n    // 1번째 api 호출하기.\n    const [isCandle, setIsCandle] = useState(null);\n\n    // 비동기 처리하기.\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setIsCandle(data);\n        } finally {\n            // setLoading1(false);\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, [url]);\n\n    return { isCandle };\n}\n\nconst Test = (isCandle) => {\n    // if(isCandle){\n    //     console.log(isCandle);\n    // }\n    const [coinCandle, setCoinCandle] = useState(null);\n\n    const personValue = () => {\n        if (isCandle) {\n            setCoinCandle(\n                isCandle.reduce(\n                    (result, item) => [\n                        ...result,\n                        {\n                            data: [\n                                {\n                                    x: new Date(item.timestamp),\n                                    y: [\n                                        item.opening_price,\n                                        item.high_price,\n                                        item.low_price,\n                                        item.trade_price,\n                                    ],\n                                },\n                            ],\n                        },\n                    ],\n                    []\n                )\n            );\n        }\n    };\n\n    useEffect(() => {\n        personValue();\n    }, [isCandle]);\n\n    // for (let x of coinCandle) console.log(x.data);\n    // if (coinCandle !== null) coinCandle.map((e) => arr.push(Object.entries(e.data)));\n\n    // coinCandle.map((e) => console.log(e.data));\n    // console.log(arr[0]);\n    // console.log(coinCandle.map((e) => typeof e.data));\n\n    return { coinCandle };\n};\n\nconst Chart = ({ candle }) => {\n    const [options, setOptions] = useState({\n        options: {\n            plotOptions: {\n                candlestick: {\n                    colors: {\n                        upward: '#DF7D46',\n                        downward: '#3C90EB',\n                    },\n                },\n            },\n            chart: {\n                type: 'candlestick',\n                height: 100,\n                brush: {\n                    enabled: false,\n                    target: undefined,\n                    autoScaleYaxis: false,\n                },\n            },\n            title: {\n                text: '30분 봉 30개',\n                align: 'left',\n            },\n            xaxis: {\n                labels: {\n                    datetimeUTC: false,\n                },\n                type: 'datetime',\n            },\n            yaxis: {\n                tooltip: {\n                    enabled: true,\n                },\n            },\n            stroke: {\n                show: true,\n                curve: 'smooth',\n                lineCap: 'butt',\n                colors: undefined,\n                width: 3,\n                dashArray: 0,\n            },\n\n            legend: {\n                show: false,\n            },\n        },\n    });\n\n    const { isCandle } = CandleUrl(\n        `https://api.upbit.com/v1/candles/minutes/30?market=${candle}&count=30`\n    );\n    const { coinCandle } = Test(isCandle);\n\n    return (\n        <div>\n            {coinCandle && (\n                <div className=\"chart\">\n                    <h2>{candle.split('-')[1]} 차트</h2>\n                    <ReactApexChart\n                        options={options.options}\n                        series={coinCandle}\n                        type=\"candlestick\"\n                        height={350}\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Chart;\n","import React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport CoinName from './CoinName';\nimport CoinStatus from './CoinStatus';\nimport { Table, Button, Space, Input, Modal } from 'antd';\nimport CoinPrice from './CoinPrice';\nimport TableSetting from './TableSetting';\nimport { map, get } from 'lodash';\nimport axios from 'axios';\nimport Chart from './Chart';\nimport './ModalSize.css';\n\nconst Search = Input.Search;\n\nfunction LandingPage(props) {\n    const [searchText, setSearchText] = useState('');\n    const [tableSetting, setTableSetting] = useState();\n    const name = CoinName('https://api.upbit.com/v1/market/all');\n\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [modalChart, setModalChart] = useState('');\n    const [isInfoModalVisible, setisInfoCoinModalVisible] = useState(false);\n    const [modalInfo, setModalInfo] = useState('');\n\n    const showModal = (e) => {\n        setModalChart(e.market);\n        const values = e.english_name.toLowerCase().replace(' ', '-');\n        const tmp = axios\n            .get(\n                `https://api.coingecko.com/api/v3/coins/${values}?tickers=true&market_data=true&community_data=true`\n            )\n            .then((response) => {\n                setModalInfo(response.data.description.ko);\n                return response.data.description.ko;\n            })\n            .catch(() => {\n                setModalInfo('코인 정보 없음');\n            });\n\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    const coinInfo = () => {\n        setisInfoCoinModalVisible(true);\n        setIsModalVisible(false);\n    };\n\n    const infoCancel = () => {\n        setisInfoCoinModalVisible(false);\n    };\n    const infoOk = () => {\n        setisInfoCoinModalVisible(false);\n    };\n\n    // console.log(name);\n    const status = CoinStatus(name);\n    const price = CoinPrice(status, name);\n    const temp = TableSetting(price);\n\n    useEffect(() => {\n        setTableSetting(temp);\n    }, [temp]);\n\n    const onSearch = (e) => {\n        const reg = new RegExp(e.target.value, 'gi');\n        const filteredData = map(temp, (record) => {\n            const nameMatch = get(record, 'krw_name').match(reg);\n            const priceMatch = String(get(record, 'price_sort')).match(reg);\n            if (!nameMatch && !priceMatch) {\n                return null;\n            }\n            return record;\n        }).filter((record) => !!record);\n\n        setSearchText(e.target.value);\n        setTableSetting(e.target.value ? filteredData : temp);\n    };\n\n    const columns = [\n        {\n            title: '이름',\n            dataIndex: 'krw_name',\n            key: 'krw_name',\n            sorter: (a, b) => a.krw_name_sort.localeCompare(b.krw_name_sort),\n            ellipsis: true,\n        },\n        {\n            title: '현재가',\n            dataIndex: 'price',\n            key: 'price',\n            sorter: (a, b) => a.price_sort - b.price_sort, // 맞는 식\n            ellipsis: true,\n        },\n        {\n            title: '전일대비',\n            dataIndex: 'chage_price',\n            key: 'chage_price',\n            sorter: (a, b) => a.chage_price_sort - b.chage_price_sort,\n            ellipsis: true,\n        },\n        {\n            title: '고가대비',\n            dataIndex: 'highest_52_week_price',\n            key: 'highest_52_week_price',\n            sorter: (a, b) => a.highest_52_week_price_sort - b.highest_52_week_price_sort,\n            ellipsis: true,\n        },\n        {\n            title: '저가대비',\n            dataIndex: 'lowest_52_week_price',\n            key: 'lowest_52_week_price',\n            sorter: (a, b) => a.lowest_52_week_price_sort - b.lowest_52_week_price_sort,\n            ellipsis: true,\n        },\n        {\n            title: '거래대금',\n            dataIndex: 'acc_trade_price_24h',\n            key: 'acc_trade_price_24h',\n            sorter: (a, b) => a.acc_trade_price_24h_sort - b.acc_trade_price_24h_sort,\n            ellipsis: true,\n        },\n        {\n            title: '정보',\n            dataIndex: 'info_name',\n            render: (text, record, index) => {\n                return (\n                    <>\n                        {/* <div>{text}</div> */}\n                        <span>\n                            <a\n                                style={{\n                                    color: 'black',\n                                    display: 'flex',\n                                    textOverflow: 'ellipsis',\n                                    overflow: 'hidden',\n                                    whiteSpace: 'nowrap',\n                                    wordBreak: 'keep-all',\n                                }}\n                                type=\"primary\"\n                                onClick={() => showModal(record)}\n                            >\n                                차트&설명 보기\n                            </a>\n                        </span>\n                    </>\n                );\n            },\n        },\n    ];\n    return (\n        // <div>hello</div>\n        <div style={{ alignItems: 'center', textAlign: 'center' }}>\n            {tableSetting && (\n                <div style={{ width: '80%', margin: 'auto' }}>\n                    <br />\n                    <Search\n                        size=\"large\"\n                        onChange={onSearch}\n                        placeholder=\"Search Records\"\n                        value={searchText}\n                        onPressEnter={onSearch}\n                    />\n                    <Table pagination={false} columns={columns} dataSource={tableSetting} />\n                    <Modal\n                        title=\"코잉쿠 차트\"\n                        visible={isModalVisible}\n                        onOk={handleOk}\n                        onCancel={handleCancel}\n                        style={{ width: '100%', resize: 'none' }}\n                        // visible ={modalChart}\n                        footer={[\n                            <Button key=\"info\" type=\"primary\" onClick={coinInfo}>\n                                코인 설명\n                            </Button>,\n                            <Button key=\"back\" onClick={handleCancel}>\n                                Cancel\n                            </Button>,\n                            <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\n                                Ok\n                            </Button>,\n                        ]}\n                    >\n                        <Chart candle={modalChart} />\n                    </Modal>\n                    <Modal\n                        title=\"코인 상세정보\"\n                        visible={isInfoModalVisible}\n                        onOk={infoOk}\n                        onCancel={infoCancel}\n                        style={{ width: '100%', resize: 'none' }}\n                        footer={[\n                            <Button key=\"back\" onClick={infoCancel}>\n                                Cancel\n                            </Button>,\n                            <Button key=\"submit\" type=\"primary\" onClick={infoOk}>\n                                Ok\n                            </Button>,\n                        ]}\n                    >\n                        {modalInfo.split('\\n').map((e) => {\n                            return (\n                                <span>\n                                    {e}\n                                    <br />\n                                </span>\n                            );\n                        })}\n                    </Modal>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default withRouter(LandingPage);\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\n\nexport const WRITE_BOARD = 'write_board';\nexport const SELECT_BOARD = 'select_board';\nexport const SELECT_BOARD_LIST = 'select_board_list';\nexport const UPDATE_BOARD = 'update_board';\nexport const DELETE_BOARD = 'delete_board';","import axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, AUTH_USER } from './types';\n\nexport function loginUser(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/users/login',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request,\n    };\n}\n\nexport function registerUser(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/users/register',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: REGISTER_USER,\n        payload: request,\n    };\n}\n\nexport function auth() {\n    const request = axios\n        .get('http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/users/auth')\n        .then((response) => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request,\n    };\n}\n","import axios from 'axios';\n// import { response } from 'express';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginUser } from '../../../_actions/user_action';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { Form, Input, Button, Checkbox } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport './LoginPage.css';\n\nconst LoginPage = (props) => {\n    const dispatch = useDispatch();\n\n    const onFinish = (values) => {\n        dispatch(loginUser(values)).then((response) => {\n            if (response.payload.loginSuccess) {\n                props.history.push('/');\n            } else {\n                alert('Error');\n            }\n        });\n    };\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100vh',\n            }}\n        >\n            <Form\n                name=\"normal_login\"\n                className=\"login-form\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n            >\n                <Form.Item\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Username!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<UserOutlined className=\"site-form-item-icon\" />}\n                        placeholder=\"Username\"\n                    />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your Password!',\n                        },\n                    ]}\n                >\n                    <Input\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n                        <Checkbox>Remember me</Checkbox>\n                    </Form.Item>\n\n                    <a className=\"login-form-forgot\" href=\"\">\n                        Forgot password\n                    </a>\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Log in\n                    </Button>\n                </Form.Item>\n                Or <a href=\"/register\">register now!</a>\n            </Form>\n        </div>\n    );\n};\n\nexport default withRouter(LoginPage);\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerUser } from '../../../_actions/user_action';\nimport { withRouter } from 'react-router-dom';\n\nimport { Form, Input, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { val } from 'cheerio/lib/api/attributes';\nconst { Option } = Select;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 8,\n        },\n    },\n    wrapperCol: {\n        xs: {\n            span: 24,\n        },\n        sm: {\n            span: 16,\n        },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 24,\n            offset: 0,\n        },\n        sm: {\n            span: 16,\n            offset: 8,\n        },\n    },\n};\n\nconst RegisterPage = (props) => {\n    const dispatch = useDispatch();\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        console.log(values);\n        if (values.password !== values.ConfirmPassword) {\n            return alert('비밀번호와 비밀번호 확인은 같아야 합니다.');\n        }\n\n        dispatch(registerUser(values)).then((response) => {\n            if (response.payload.success) {\n                props.history.push('/login');\n            } else {\n                alert('Failed to sign up');\n            }\n        });\n    };\n\n    const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100vh',\n            }}\n        >\n            <Form\n                {...formItemLayout}\n                form={form}\n                name=\"register\"\n                onFinish={onFinish}\n                scrollToFirstError\n            >\n                <Form.Item\n                    name=\"email\"\n                    label=\"E-mail\"\n                    rules={[\n                        {\n                            type: 'email',\n                            message: 'The input is not valid E-mail!',\n                        },\n                        {\n                            required: true,\n                            message: 'Please input your E-mail!',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"password\"\n                    label=\"Password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your password!',\n                        },\n                    ]}\n                    hasFeedback\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"ConfirmPassword\"\n                    label=\"Confirm\"\n                    dependencies={['password']}\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({ getFieldValue }) => ({\n                            validator(_, value) {\n                                if (!value || getFieldValue('password') === value) {\n                                    return Promise.resolve();\n                                }\n\n                                return Promise.reject(\n                                    new Error('The two passwords that you entered do not match!')\n                                );\n                            },\n                        }),\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"name\"\n                    label=\"name\"\n                    tooltip=\"What do you want others to call you?\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your name!',\n                            whitespace: true,\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"phonenumber\"\n                    label=\"Phone\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your phone number!',\n                        },\n                    ]}\n                >\n                    <Input\n                        style={{\n                            width: '100%',\n                        }}\n                    />\n                </Form.Item>\n\n                <Form.Item\n                    name=\"agreement\"\n                    valuePropName=\"checked\"\n                    rules={[\n                        {\n                            validator: (_, value) =>\n                                value\n                                    ? Promise.resolve()\n                                    : Promise.reject(new Error('Should accept agreement')),\n                        },\n                    ]}\n                    {...tailFormItemLayout}\n                >\n                    <Checkbox>\n                        I have read the <a href=\"\">agreement</a>\n                    </Checkbox>\n                </Form.Item>\n                <Form.Item {...tailFormItemLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Register\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n};\n\nexport default withRouter(RegisterPage);\n","import React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, Button, Space, Input } from 'antd';\nimport axios from 'axios';\nimport { map, get } from 'lodash';\nimport './Community.css';\nconst Search = Input.Search;\n\nfunction Community(props) {\n    const [temp, setTemp] = useState([]);\n    const [searchText, setSearchText] = useState('');\n    const [clone, setClone] = useState();\n\n    const Api = async () => {\n        const { data } = await axios.post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/selectlist'\n        );\n        setTemp(data);\n        setClone(data);\n    };\n    console.log(clone);\n\n    const onChange = (e) => {\n        console.log('Change:', e.target.value);\n    };\n\n    const onSearch = (e) => {\n        const reg = new RegExp(e.target.value, 'gi');\n        const filteredData = map(clone, (record) => {\n            const username = get(record, 'user_name').match(reg);\n            const usertitle = String(get(record, 'title')).match(reg);\n            if (!username && !usertitle) {\n                return null;\n            }\n            return record;\n        }).filter((record) => !!record);\n\n        setSearchText(e.target.value);\n        // setFiltered(!!e.target.value);\n        setTemp(e.target.value ? filteredData : clone);\n    };\n\n    useEffect(() => {\n        Api();\n    }, []);\n\n    const columns = [\n        {\n            title: '제목',\n            dataIndex: 'title',\n            key: 'title',\n            ellipsis: true,\n        },\n        {\n            title: '작성자',\n            dataIndex: 'user_name',\n            key: 'user_name',\n            ellipsis: true,\n        },\n        {\n            title: '내용',\n            dataIndex: 'content',\n            key: 'content',\n            ellipsis: true,\n            render: (text, record, index) => {\n                return (\n                    <>\n                        <Link to={`/community/${record.id}`} style={{ color: 'black' }}>\n                            {text}\n                        </Link>\n                    </>\n                );\n            },\n        },\n        {\n            title: 'date',\n            dataIndex: 'write_date',\n            key: 'write_date',\n            ellipsis: true,\n        },\n    ];\n    return (\n        // <div>hello</div>\n        <div>\n            {temp && (\n                <div className=\"form\">\n                    <div className=\"sub\">\n                        <br />\n                        <div className=\"subject\">\n                            <h1 style={{ marginLeft: '10px' }}>커뮤니티</h1>\n                            <div style={{ margin: '10px' }}>\n                                <Link\n                                    to=\"/community/writepost\"\n                                    style={{ color: 'black', marginLeft: '10px' }}\n                                >\n                                    <button>글쓰기</button>\n                                </Link>\n                            </div>\n                        </div>\n                        <Search\n                            size=\"large\"\n                            onChange={onSearch}\n                            placeholder=\"Search Records\"\n                            value={searchText}\n                            onPressEnter={onSearch}\n                        />\n                        <Table\n                            style={{ width: '100%', margin: 'auto' }}\n                            pagination={false}\n                            columns={columns}\n                            dataSource={temp}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n    // return <div>{temp ? temp.map((e) => <tr>{e.title}</tr>) : <div>No</div>}</div>;\n}\n\nexport default withRouter(Community);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CoinNews.css';\n\nfunction News({ key, url, image, title, summary, date }) {\n    return (\n        <div className=\"coin-news\">\n            <a href={url}>\n                <div className=\"news__image\">\n                    <img src={image} alt={title} />\n                </div>\n                <div className=\"news__data\">\n                    <h3 className=\"news__title\">{title}</h3>\n                    <h5 className=\"news__date\">{date}</h5>\n                    <p className=\"news__summary\">{summary}</p>\n                </div>\n            </a>\n        </div>\n    );\n}\n\nNews.propTypes = {\n    key: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n};\n\nexport default News;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport CoinNews from './CoinNews';\n\nfunction CoinNewsPage(props) {\n    const [NewsDatas, setNewsDatas] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/crawling/news').then((response) => {\n            setNewsDatas(response.data);\n        });\n    }, []);\n\n    return (\n        <section className=\"news-container\">\n            <div className=\"coin-news-datas\">\n                {NewsDatas.map((news) => (\n                    <CoinNews\n                        key={news.url}\n                        url={'https://kr.investing.com/' + news.url}\n                        image={news.image}\n                        title={news.title}\n                        summary={news.summary}\n                        date={news.date}\n                    />\n                ))}\n            </div>\n        </section>\n    );\n}\n\nexport default withRouter(CoinNewsPage);\n","import axios from 'axios';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../_actions/user_action';\n\nexport default function (SpecificComponent, option, adminRouter = null) {\n    //null    => 아무나 출입이 가능한 페이지\n    //true    => 로그인 한 유저만 출입이 가능한 페이지\n    //false   => 로그인한 유저는 출입 불가능한 페이지\n\n    function AuthenticationCheck(props) {\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            dispatch(auth()).then((response) => {\n                console.log(response);\n\n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login');\n                    }\n                } else {\n                    if (adminRouter && !response.payload.isAdmin) {\n                        props.history.push('/');\n                    } else {\n                        if (option === false) props.history.push('/');\n                    }\n                }\n            });\n        }, []);\n\n        return <SpecificComponent />;\n    }\n\n    return AuthenticationCheck;\n}\n","export default __webpack_public_path__ + \"static/media/다운로드.d8ee1a27.png\";","import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport './Header.css';\nimport iconMain from '../../../img/다운로드.png';\nimport iconHome from '../../../img/home.png';\nimport { AliwangwangOutlined, QqOutlined } from '@ant-design/icons';\n\nfunction Header(props) {\n    // useEffect(() => {\n    //     axios.get('/api/hello').then((response) => console.log(response.data));\n    // }, []);\n\n    const onClickHandler = () => {\n        axios.get('/api/users/logout').then((response) => {\n            if (response.data.success) {\n                props.history.push('/login');\n            } else {\n                alert('로그아웃 하는데 실패했습니다.');\n            }\n        });\n    };\n\n    // const onClicklogin = () => {\n\n    // }\n\n    return (\n        <div>\n            <div className=\"Link\">\n                <div className=\"Home\">\n                    <Link to=\"/\">\n                        <AliwangwangOutlined\n                            style={{ fontSize: '40px', marginLeft: '14px', color: 'black' }}\n                        />\n                        <h2>cOingkoo</h2>\n                    </Link>\n                </div>\n                <ul className=\"Menu\">\n                    <li>\n                        <Link to=\"/community\">커뮤니티</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/coinnews\">기사</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/coinsite\">코인사이트</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/info\">소개</Link>\n                    </li>\n                </ul>\n                <div className=\"Log\">\n                    <Link to=\"/login\">로그인</Link>\n                    <Link onClick={onClickHandler}>로그아웃</Link>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withRouter(Header);\n\n// const Header = () => (\n//     <header style={headerStyle}>\n//         <h1 style={{ color: '#f9f7f7' }}>코인 시세 정보</h1>\n//     </header>\n// );\n\n// const headerStyle = {\n//     position: 'fixed',\n//     top: 0,\n//     left: 0,\n//     right: 0,\n//     width: '100%',\n//     // backgroundColor: '#3f72af',\n//     marginBottom: 20,\n//     zIndex: 100,\n//     textAlign: 'center',\n// };\n\n// export default Header;\n","import React from 'react';\n\nconst MarketCapitalization = () => {\n    return <div>market</div>;\n};\n\nexport default MarketCapitalization;\n","import React from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { InstagramOutlined } from '@ant-design/icons';\n\nimport './Info.css';\n\nconst Info = () => {\n    return (\n        <div className=\"main_text\">\n            <div className=\"main_title\">\n                <h2 className=\"title\">\n                    <strong>코잉쿠(cOingkoo)</strong>\n                </h2>\n            </div>\n            <div className=\"introduce\">\n                <h2 className=\"title\">1. 개요</h2>\n                <p>\n                    프론트 개발자, 백앤드 개발자의 협업 프로젝트 코잉쿠(cOingkoo)는 개인의 실력\n                    향상과 사이트 배포등을 실습하기 위해 제작된 사이트이다. 각각의 컴포넌트의 이해,\n                    css적용, api이용, 리덕스, 데이터베이스 사용 등을 직접 다뤄보는 것이 주된\n                    프로젝트의 목표이다.\n                </p>\n                <p>\n                    프로젝트는 나날이 증가하는 암호화폐와, 암호화폐투자자의 증가로 인해 암호화폐의\n                    대한 정보, 더 나아가 거래소들의 정보 등을 한눈에 알아보기 쉽게 제공해주고자 만든\n                    프로젝트이다.\n                </p>\n            </div>\n            <div className=\"introduce\">\n                <h2 className=\"title\">2. 상세</h2>\n                <p>\n                    최근 몇년 전 부터 시작된 암호화폐의 붐은 2021년을 기준으로 사상 최고치를\n                    기록하였다. 비트코인은 사상 최고가 8천만원을 돌파하였고, 이더리움은 5백만원대를\n                    기록하였다.\n                </p>\n                <p>\n                    하지만 최근 비트코인의 투자자들의 돌연 매도 소식과, 각종 나라들의 제약으로 인해\n                    하락세를 겪고있다. 비트코인은 최고가를 기준으로 50%나 떨어졌으며, 다른\n                    알트들또한 많게는 80%까지의 손해를 기록하고 있다.\n                </p>\n                <p>\n                    더이상 암화폐의 개미 투자자들의 돈을 기부만 할 수는 없는 상황이기 때문에 신중한\n                    코인에 대한 이해와 거래소 등을 파악하여야 한다.\n                </p>\n                <p>\n                    코잉쿠(cOingkoo)의 메인페이지에서 코인의 시세, 차트, 코인의 정보등을 파악하며\n                    커뮤니티를 통한 투자자들간의 소통, 코인관련 기사를 통한 트랜드 파악, 거래소의\n                    신뢰도를 바탕으로 자신에게 맞는 거래소를 파악하며 투자에 더 신중하게 다가가야\n                    한다.\n                </p>\n                <p>\n                    앞으로 추가될 프로젝트를 통해 코잉쿠(cOingkoo)의 활용성을 더욱이 확장시킬\n                    계획이다.\n                </p>\n            </div>\n            {/* <div className=\"introduce\">\n                <h2 className=\"title\">3. 원인</h2>\n                <p>\n                    가장 큰 원인을 한 마디로 요약하자면 국내의 높은 수요 + 사실상 막혀 있는\n                    재정거래(arbitrage) 때문이라 할 수 있다.\n                </p>\n                <p>\n                    정상적인 시장이라면, 국가간 가격차이가 발생하는 즉시 차익을 노리고 싼 데서 사서\n                    비싼 데서 파는 재정거래가 발생하므로 곧 가격차이가 해소되게 마련이다. 직접\n                    실물이 오가야 하는 것도 아닌, 온라인상에서 모든 것이 처리 가능한 암호화폐라면\n                    특히 더 쉬워야 정상이다. 그러나 가상화폐 시장은 외국인 거래가 막혀있으며,\n                    거래소가 유동성을 공급하는것도 불법이며, 외화를 이용해 외국 거래소에서 구매하는\n                    것 또한 외화유출및 환치기로 처벌받을 수 있기 때문이다.\n                </p>\n                <p>\n                    하지만 일부 투자자들은 프리미엄을 노린 차익거래를 시도하기도 한다. 바로\n                    프리미엄이 낮을때 원화로 비트코인을 구매한 후 외국 거래소에서 달러로 바꿔두고,\n                    프리미엄이 높을때 달러를 비트코인으로 들여와 원화로 바꾸는 형식. 커뮤니티에서는\n                    보따리꾼이라고도 한다. 해당 방법은 환율 및 전송시간, 거래소 신뢰도 등으로\n                    무위험은 아니지만 어느정도 수익이 난다고 알려져있으며, 이런 거래로 인해\n                    프리미엄이 일정 수치로 유지되고 있다. 다만, 2018년 초에는 엄청난 자금 유입으로\n                    인해 보따리꾼들이 전부 원화로 바꿨음에도 프리미엄이 치솟아 한때 60%에 달한적도\n                    있었다.\n                </p>\n            </div> */}\n            <div>\n                <h2 className=\"title\">3. 개발자</h2>\n                <div className=\"dev_info\">\n                    <div classNale=\"insta\">\n                        지한솔(front-end) :\n                        <a href=\"https://www.instagram.com/han_solbangul/\">\n                            <InstagramOutlined\n                                style={{ marginLeft: '4px', marginRight: '4px', color: 'black' }}\n                            />\n                        </a>\n                    </div>\n                    <div classNale=\"insta\">\n                        전범구(back-end) :\n                        <a href=\"https://www.instagram.com/wjsqjarn/\">\n                            <InstagramOutlined\n                                style={{ marginLeft: '4px', marginRight: '4px', color: 'black' }}\n                            />\n                        </a>\n                    </div>\n                    <div classNale=\"insta\">\n                        안재현(mento) :\n                        <a href=\"https://www.instagram.com/97_jaehyeons/\">\n                            <InstagramOutlined\n                                style={{ marginLeft: '4px', marginRight: '4px', color: 'black' }}\n                            />\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Info);\n","import React from 'react';\nimport './ImageUrl.css';\n\nfunction ImageUrl({ url, name, image, year, trustScore, trustScoreRank }) {\n    if (year === null) year = '알 수 없음.';\n    return (\n        <div className=\"marketsite\">\n            <a href={url}>\n                <h2>{trustScoreRank}</h2>\n                <p></p>\n                <img src={image} alt={name} title={name} />\n                <div className=\"marketsite__data\">\n                    <h3 className=\"marketsite__title\">거래소 : {name}</h3>\n                    <h5 className=\"marketsite__year\">설립연도 : {year}</h5>\n                    <h5 className=\"marketsite__trustscore\">신뢰도 : {trustScore}</h5>\n                </div>\n            </a>\n        </div>\n    );\n}\n\nexport default ImageUrl;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ImageUrl from './ImageUrl';\nimport './CoinSite.css';\nimport { withRouter } from 'react-router-dom';\n\nfunction MarketSite(url) {\n    const [site, setSite] = useState(null);\n\n    const callUrl = async () => {\n        try {\n            const { data } = await axios.get(url);\n            setSite(data);\n            // console.log(data);\n        } catch {\n            console.log('err');\n        } finally {\n            console.log('final');\n        }\n    };\n\n    useEffect(() => {\n        callUrl();\n    }, []);\n\n    return site;\n}\n\nconst CoinSite = () => {\n    const site = MarketSite('https://api.coingecko.com/api/v3/exchanges?per_page=100');\n\n    return (\n        <section className=\"container\">\n            <div className=\"marketsites\">\n                {site &&\n                    site.map((e) => (\n                        <ImageUrl\n                            name={e.name}\n                            url={e.url}\n                            image={e.image}\n                            year={e.year_established}\n                            trustScore={e.trust_score}\n                            trustScoreRank={e.trust_score_rank}\n                        />\n                    ))}\n            </div>\n        </section>\n    );\n};\n\nexport default withRouter(CoinSite);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { writeBoard } from '../../../_actions/board_action';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Input, Form, Button } from 'antd';\nimport { auth } from '../../../_actions/user_action';\nimport { val } from 'cheerio/lib/api/attributes';\nimport './Community.css';\n\nconst News = (props) => {\n    const dispatch = useDispatch();\n    // const [form] = Form.useForm();\n\n    const { TextArea } = Input;\n    const [name, setName] = useState();\n    const [email, setEmail] = useState();\n\n    useEffect(() => {\n        dispatch(auth()).then((response) => {\n            console.log(response);\n            if (response.payload.error) {\n                alert('로그인 후 이용해주세요 :D');\n                props.history.push('/community');\n            }\n            setName(response.payload.name);\n            setEmail(response.payload.email);\n        });\n    }, []);\n\n    const onFinish = (values) => {\n        values.user_name = name;\n        values.user_email = email;\n        console.log(values);\n        dispatch(writeBoard(values)).then((response) => {\n            if (response.payload.boardWriteSuccess) {\n                props.history.push('/community');\n            } else {\n                alert('글 저장 실패');\n            }\n        });\n    };\n\n    return (\n        <Form\n            onFinish={onFinish}\n            style={{\n                textAlign: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                // width: '100%',\n                height: '100vh',\n                margin: 'auto',\n                alignItems: 'center',\n                width: '80%',\n            }}\n        >\n            <div>\n                <p style={{ marginRight: '5px' }}>제목: </p>\n                <Form.Item\n                    name=\"title\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'please input title',\n                        },\n                    ]}\n                >\n                    <input />\n                </Form.Item>\n            </div>\n\n            <Form.Item\n                name=\"content\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'please input title',\n                    },\n                ]}\n            >\n                <TextArea showCount maxLength={200} />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    게시\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n};\n\nexport default withRouter(News);\n","import axios from 'axios';\nimport { WRITE_BOARD, SELECT_BOARD, SELECT_BOARD_LIST, UPDATE_BOARD, DELETE_BOARD } from './types';\n\nexport function writeBoard(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/write',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: WRITE_BOARD,\n        payload: request,\n    };\n}\n\nexport function selectBoardList(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/selectlist',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: SELECT_BOARD_LIST,\n        payload: request,\n    };\n}\n\nexport function selectBoard(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/select',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: SELECT_BOARD,\n        payload: request,\n    };\n}\n\nexport function updateBoard(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/update',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: UPDATE_BOARD,\n        payload: request,\n    };\n}\n\nexport function deleteBoard(dataTosubmit) {\n    const request = axios\n        .post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/delete',\n            dataTosubmit\n        )\n        .then((response) => response.data);\n\n    return {\n        type: DELETE_BOARD,\n        payload: request,\n    };\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, withRouter } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { deleteBoard } from '../../../_actions/board_action';\nimport './Community.css';\n\nconst Post = ({ match, history }) => {\n    const [temp, setTemp] = useState([]);\n    const id = match.params.id;\n\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(deleteBoard({ id })).then((response) => {\n            if (response.payload.boardDeleteSuccess) {\n                history.goBack();\n            } else {\n                alert('Error');\n            }\n        });\n    };\n\n    const Api = async () => {\n        const { data } = await axios.post(\n            'http://ec2-3-142-74-185.us-east-2.compute.amazonaws.com:5000/api/board/select',\n            { id }\n        );\n        setTemp(data);\n    };\n\n    useEffect(() => {\n        Api();\n    }, []);\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                // width: '100%',\n                height: '100vh',\n                margin: 'auto',\n                alignItems: 'center',\n                width: '80%',\n            }}\n        >\n            <div style={{ display: 'flex' }}>\n                <div>제목 :</div>\n                <div className=\"post_table\">{temp.title}</div>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n                <div>작성자 :</div>\n                <div className=\"post_table\">{temp.user_name}</div>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n                <div>이메일 :</div>\n                <div className=\"post_table\">{temp.user_email}</div>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n                <div>작성일 :</div>\n                <div className=\"post_table\">{temp.write_date}</div>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n                <div className=\"post_content\">{temp.content}</div>\n            </div>\n\n            <div style={{ display: 'flex' }}>\n                <Link to=\"/community\" style={{ color: 'black', marginRight: '5px' }}>\n                    목록\n                </Link>\n                <a style={{ color: 'black', marginLeft: '5px' }} onClick={handleClick}>\n                    삭제\n                </a>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(Post);\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport LandingPage from './views/LandingPage/LandingPage';\nimport LoginPage from './views/LoginPage/LoginPage';\nimport RegisterPage from './views/RegisterPage/RegisterPage';\nimport Community from './views/Community/Community';\nimport CoinNewsPage from './views/CoinNews/CoinNewsPage';\nimport Auth from '../hoc/auth';\nimport Header from './views/Header/Header';\nimport MarketCapitalization from './views/MarketCapitalization/MarketCapitalization';\nimport Info from './views/Info/Info.js';\nimport CoinSite from './views/CoinSite/CoinSite';\n// import News from './views/CoinNews/CoinNews';\nimport WritePost from './views/Community/WritePost';\nimport Post from './views/Community/Post';\n\nfunction App() {\n    return (\n        <Router>\n            <div>\n                <Header />\n                <Switch>\n                    <Route exact path=\"/\" component={LandingPage} />\n                    <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n                    <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n                    <Route exact path=\"/community\" component={Community} />\n                    <Route exact path=\"/coinnews\" component={CoinNewsPage} />\n                    <Route exact path=\"/coinsite\" component={CoinSite} />\n                    <Route exact path=\"/marketcapitalization\" component={MarketCapitalization} />\n                    <Route exact path=\"/info\" component={Info} />\n                    <Route exact path=\"/community/writepost\" component={WritePost} />\n                    <Route exact path=\"/community/:id\" component={Post} />\n                    {/* <Route exact path=\"/Community\" component={Community} /> */}\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport board from './board_reducer';\n\nconst rootReducer = combineReducers({\n    user, board\n});\n\nexport default rootReducer;\n","import { LOGIN_USER, REGISTER_USER, AUTH_USER } from '../_actions/types';\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loginSuccess: action.payload };\n            break;\n\n        case REGISTER_USER:\n            return { ...state, regiser: action.payload };\n            break;\n\n        case AUTH_USER:\n            return { ...state, userData: action.payload };\n            break;\n\n        default:\n            return state;\n    }\n}\n","import { WRITE_BOARD, SELECT_BOARD, UPDATE_BOARD, DELETE_BOARD, SELECT_BOARD_LIST } from '../_actions/types';\n\nexport default function (state = {}, action) {\n    switch (action.type) {\n        case WRITE_BOARD:\n            return { ...state, writeSuccess: action.payload };\n            break;\n\n        case SELECT_BOARD:\n            return { ...state, boardData: action.payload };\n            break;\n\n        case SELECT_BOARD_LIST:\n                return { ...state, boardData: action.payload };\n                break;\n\n        case UPDATE_BOARD:\n            return { ...state, boardData: action.payload };\n            break;\n            \n        case DELETE_BOARD:\n            return { ...state, deleteSuccess: action.payload };\n            break;\n\n        default:\n            return state;\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './componentes/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport 'antd/dist/antd.css';\nimport { applyMiddleware, createStore } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\nimport Reducer from './_reducers';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <App />\n    </Provider>,\n\n    // <React.StrictMode>\n    //     <App />\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}